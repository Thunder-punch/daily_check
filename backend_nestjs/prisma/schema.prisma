// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id                Int       @id @default(autoincrement()) // companyId
  name              String    @unique                      // companyName
  businessNumber    String?                                 // 사업자번호 (businessNumber)
  address           String?                                 // address
  adminCode         String?  @unique                        // 관리자 코드 (adminCode)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  users             User[]
  records           Record[]
  companyCode       String?  @unique                        // companyCode (회사 코드, 중복 방지)
}

model User {
  id                Int       @id @default(autoincrement()) // userId
  name              String                                   // name
  email             String?  @unique                         // email
  password          String                                   // password
  phoneNumber       String?                                  // phoneNumber
  role              String                                   // role (직위/직책)
  isAdmin           Boolean   @default(false)                // isAdmin (관리자 여부)
  isCEO             Boolean   @default(false)                // userType (대표/직원 구분)
  companyId         Int
  company           Company   @relation(fields: [companyId], references: [id])
  joinStatus        String?                                  // joinStatus (가입 상태)
  notificationSettings Json?                                 // notificationSettings (알림 설정)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  records           Record[]
  employeeStatus    String?                                  // employeeStatus (직원 상태)
  employeeNote      String?                                  // employeeNote (특이사항)
}

model Record {
  id                Int       @id @default(autoincrement())
  userId            Int
  user              User      @relation(fields: [userId], references: [id])
  companyId         Int
  company           Company   @relation(fields: [companyId], references: [id])
  date              DateTime                                // date (날짜)
  checkIn           DateTime?                               // checkIn (출근 시간)
  checkOut          DateTime?                               // checkOut (퇴근 시간)
  attendanceStatus  String                                  // attendanceStatus (출근/퇴근/결근 등 상태)
  reason            String?                                 // reason (수정/결근/휴가 사유)
  approvalStatus    String?                                 // approvalStatus (수정 승인 상태)
  vacationType      String?                                 // vacationType (휴가 종류)
  partTimeType      String?                                 // partTimeType (근무 형태)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@index([userId])
  @@index([companyId])
  @@index([date])
}
